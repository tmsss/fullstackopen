{"ast":null,"code":"var _jsxFileName = \"/home/tmsss/Documents/courses/fullstackopen/part1/src/App.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = props => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: props.course\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Header;\n\nconst Part = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [props.name, \" \", props.exercises]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Part;\n\nconst Content = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.parts.map(part => /*#__PURE__*/_jsxDEV(Part, {\n      name: part.name,\n      exercises: part.exercises\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Content;\n\nconst Total = props => {\n  let total = 0;\n  props.total.forEach(part => {\n    total += part.exercises;\n  });\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Number of exercises \", total]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = Total;\n\nconst App = () => {\n  const course = {\n    name: 'Half Stack application development',\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7\n    }, {\n      name: 'State of a component',\n      exercises: 14\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      course: course.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      parts: course.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      total: course.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Part\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"Total\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["/home/tmsss/Documents/courses/fullstackopen/part1/src/App.js"],"names":["React","Header","props","course","Part","name","exercises","Content","parts","map","part","Total","total","forEach","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,sBACE;AAAA,cAAKA,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAJD;;KAAMF,M;;AAMN,MAAMG,IAAI,GAAIF,KAAD,IAAW;AACtB,sBACE;AAAA,eACGA,KAAK,CAACG,IADT,OACgBH,KAAK,CAACI,SADtB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;MAAMF,I;;AAQN,MAAMG,OAAO,GAAIL,KAAD,IAAW;AACzB,sBACE;AAAA,cACGA,KAAK,CAACM,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,iBACnB,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAI,CAACL,IAAjB;AAAuB,MAAA,SAAS,EAAEK,IAAI,CAACJ;AAAvC;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CARD;;MAAMC,O;;AAUN,MAAMI,KAAK,GAAIT,KAAD,IAAW;AACvB,MAAIU,KAAK,GAAG,CAAZ;AAEAV,EAAAA,KAAK,CAACU,KAAN,CAAYC,OAAZ,CAAoBH,IAAI,IAAI;AAC1BE,IAAAA,KAAK,IAAIF,IAAI,CAACJ,SAAd;AACD,GAFD;AAIA,sBACE;AAAA,uCAAwBM,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAVD;;MAAMD,K;;AAYN,MAAMG,GAAG,GAAG,MAAM;AAChB,QAAMX,MAAM,GAAG;AACbE,IAAAA,IAAI,EAAE,oCADO;AAEbG,IAAAA,KAAK,EAAE,CACL;AACEH,MAAAA,IAAI,EAAE,uBADR;AAEEC,MAAAA,SAAS,EAAE;AAFb,KADK,EAKL;AACED,MAAAA,IAAI,EAAE,0BADR;AAEEC,MAAAA,SAAS,EAAE;AAFb,KALK,EASL;AACED,MAAAA,IAAI,EAAE,sBADR;AAEEC,MAAAA,SAAS,EAAE;AAFb,KATK;AAFM,GAAf;AAkBA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEH,MAAM,CAACE;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEF,MAAM,CAACK;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEL,MAAM,CAACK;AAArB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA1BD;;MAAMM,G;AA4BN,eAAeA,GAAf","sourcesContent":["import React from 'react'\n\nconst Header = (props) => {\n  return(\n    <h1>{props.course}</h1>\n  )\n}\n\nconst Part = (props) => {\n  return(\n    <p>\n      {props.name} {props.exercises}\n    </p>\n  )\n}\n\nconst Content = (props) => {\n  return(\n    <div>\n      {props.parts.map(part => (\n        <Part name={part.name} exercises={part.exercises} />\n      ))}\n    </div>\n  )\n}\n\nconst Total = (props) => {\n  let total = 0;\n\n  props.total.forEach(part => {\n    total += part.exercises\n  });\n\n  return(\n    <p>Number of exercises {total}</p>\n  )\n}\n\nconst App = () => {\n  const course = {\n    name: 'Half Stack application development',\n    parts: [\n      {\n        name: 'Fundamentals of React',\n        exercises: 10\n      },\n      {\n        name: 'Using props to pass data',\n        exercises: 7\n      },\n      {\n        name: 'State of a component',\n        exercises: 14\n      }\n    ]\n  }\n\n  return (\n    <div>\n      <Header course={course.name} />\n      <Content parts={course.parts}/>\n      <Total total={course.parts} />\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}