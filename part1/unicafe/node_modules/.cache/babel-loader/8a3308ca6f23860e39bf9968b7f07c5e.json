{"ast":null,"code":"var _jsxFileName = \"/home/tmsss/Documents/courses/fullstackopen/part1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StatisticLine = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [props.text, \" \", props.value]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 3,\n  columnNumber: 32\n}, this);\n\n_c = StatisticLine;\n\nconst Statistics = clicks => {\n  const getAll = () => clicks.good + clicks.neutral + clicks.bad;\n\n  const getPositive = () => clicks.good / getAll() * 100;\n\n  const getAverage = () => (clicks.good * 1 + clicks.bad * -1) / getAll();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"good\",\n      value: clicks.good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"neutral\",\n      value: clicks.neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"bad\",\n      value: clicks.bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"all\",\n      value: getAll()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"average\",\n      value: getAverage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"positive\",\n      value: getPositive()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Statistics;\n\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.handleClick,\n  children: props.text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 3\n}, this);\n\n_c3 = Button;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [clicks, setClicks] = useState({\n    good: 0,\n    neutral: 0,\n    bad: 0\n  });\n\n  const setValue = property => {\n    const newClicks = { ...clicks,\n      [property]: clicks[property] + 1\n    };\n    setClicks(newClicks);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setValue('good'),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setValue('neutral'),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setValue('bad'),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      clicks: clicks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"33GhSbtliTqDxM/CDVQyJqgNZmA=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StatisticLine\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/home/tmsss/Documents/courses/fullstackopen/part1/unicafe/src/App.js"],"names":["React","useState","StatisticLine","props","text","value","Statistics","clicks","getAll","good","neutral","bad","getPositive","getAverage","Button","handleClick","App","setClicks","setValue","property","newClicks"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nconst StatisticLine = props => <div>{props.text} {props.value}</div>\n\nconst Statistics = (clicks) => {\n  const getAll = () => clicks.good + clicks.neutral + clicks.bad\n\n  const getPositive = () => clicks.good / getAll() * 100\n\n  const getAverage = () => (clicks.good * 1 + clicks.bad * -1) / getAll()\n\n  return (\n    <div>\n      <h1>statistics</h1>\n      <StatisticLine text=\"good\" value={clicks.good} />\n      <StatisticLine text=\"neutral\" value={clicks.neutral} />\n      <StatisticLine text=\"bad\" value={clicks.bad} />\n      <StatisticLine text=\"all\" value={getAll()} />\n      <StatisticLine text=\"average\" value={getAverage()} />\n      <StatisticLine text=\"positive\" value={getPositive()} />\n    </div>    \n  )\n\n}\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>\n    {props.text}\n  </button>\n)\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [clicks, setClicks] = useState({\n    good: 0, neutral: 0, bad: 0\n  })\n\n  const setValue = property => {\n    const newClicks = { \n      ...clicks, \n      [property]: clicks[property] + 1 \n    }\n    setClicks(newClicks)\n  }\n\n\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button handleClick={() => setValue('good')} text=\"good\" />\n      <Button handleClick={() => setValue('neutral')} text=\"neutral\" />\n      <Button handleClick={() => setValue('bad')} text=\"bad\" />\n      <Statistics clicks={clicks} />\n\n      \n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}